
    libraries/AP_GPS/examples/GPS_AUTO_test
    libraries/AP_InertialSensor/examples/INS_generic
    libraries/AP_Compass/examples/AP_Compass_test
    libraries/AP_Baro/examples/BARO_generic
    libraries/AP_AHRS/examples/AHRS_Test

For example, the following will build and install the AP_GPS example sketch on a Pixhawk:

cd $ARDUPILOT_HOME # the top-level of an AruPilot repository
./waf configure --board=px4-v2
./waf build --target examples/INS_generic --upload
./waf build --target examples/Scheduler_test

waf can list the examples it can build:
cd $ARDUPILOT_HOME
./waf list | grep 'examples'

The Pixhawk has 6 servo connectors labeled AUX 1-6. These can be used for digital outputs or pwm servo outputs. The use is controlled by the BRD_PWM_COUNT parameter. It is default set to 4 which programs the first four aux ports 1-4 to be pwm outputs. Once again the 3DR folks seem to have a need to add some confusion so they sometimes refer to these pins as 50-55, which I assume is how they are labeled on the printed circuit board that most people never see. If you programmed all 6 outputs to be PWM they would correspond to RC9-RC14. 
https://www.rcgroups.com/forums/showthread.php?2333925-Controlling-external-devices-like-Gimbals-and-lights-with-APM/page9

AUX OUT 5 and 6 cannot be used by default because they are setup as Relays. These pins can changed to Servo outputs by setting the BRD_PWM_COUNT parameter to 6 and setting RELAY_PIN and RELAY_PIN2 to -1.
http://ardupilot.org/copter/docs/common-servo.html

~/ardupilot$ ./waf build --target examples/INS_generic --upload

~/ardupilot$ 
mavproxy.py --setup --master /dev/serial/by-id/usb-ArduPilot_fmuv2_32002B000B51363335333536-if00 // black
mavproxy.py --setup --master /dev/serial/by-id/usb-ArduPilot_fmuv2_25003C000E51363130363134-if00 // white

k@k-X55CR:~/ardupilot$ ls /dev/serial/by-id usb-3D_Robotics_PX4_FMU_v4.x_0-if00

~/ardupilot/libraries/AP_HAL_ChibiOS/hwdef/fmuv4/hwdef.dat
define BOARD_PWM_COUNT_DEFAULT 6

./libraries/AP_HAL_ChibiOS/hwdef/fmuv4/hwdef.dat:218:define BOARD_PWM_COUNT_DEFAULT 6 <<<<<<<=======
./libraries/AP_HAL_ChibiOS/hwdef/KakuteF7/hwdef.dat:153:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/KakuteF4/hwdef.dat:153:define BOARD_PWM_COUNT_DEFAULT 8
./libraries/AP_HAL_ChibiOS/hwdef/F35Lightning/hwdef.dat:119:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/airbotf4/hwdef.dat:109:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/MatekF405/hwdef.dat:162:define BOARD_PWM_COUNT_DEFAULT 8
./libraries/AP_HAL_ChibiOS/hwdef/DrotekP3Pro/hwdef.dat:244:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/omnibusf4v6/hwdef.dat:145:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/fmuv5/hwdef.dat:175:define BOARD_PWM_COUNT_DEFAULT 8
./libraries/AP_HAL_ChibiOS/hwdef/OmnibusNanoV6/hwdef.dat:131:define BOARD_PWM_COUNT_DEFAULT 4
./libraries/AP_HAL_ChibiOS/hwdef/sparky2/hwdef.dat:142:define BOARD_PWM_COUNT_DEFAULT 7
./libraries/AP_HAL_ChibiOS/hwdef/MatekF405-Wing/hwdef.dat:183:define BOARD_PWM_COUNT_DEFAULT 9
./libraries/AP_HAL_ChibiOS/hwdef/speedybeef4/hwdef.dat:148:define BOARD_PWM_COUNT_DEFAULT 8
./libraries/AP_HAL_ChibiOS/hwdef/fmuv3/hwdef.dat:346:define BOARD_PWM_COUNT_DEFAULT 4
./libraries/AP_HAL_ChibiOS/hwdef/F4BY/hwdef.dat:182:define BOARD_PWM_COUNT_DEFAULT 12
./libraries/AP_HAL_ChibiOS/hwdef/omnibusf4pro/hwdef.dat:137:define BOARD_PWM_COUNT_DEFAULT 6
./libraries/AP_HAL_ChibiOS/hwdef/revo-mini/hwdef.dat:140:define BOARD_PWM_COUNT_DEFAULT 8
./libraries/AP_HAL_ChibiOS/hwdef/mindpx-v2/hwdef.dat:204:define BOARD_PWM_COUNT_DEFAULT 12

AP_BoardConfig.cpp
#elif defined(CONFIG_ARCH_BOARD_PX4FMU_V4)
#define BOARD_PWM_COUNT_DEFAULT 0 // 6 -- Pixracer

#else // V2
#define BOARD_PWM_COUNT_DEFAULT 0 //4

# hw definition file for processing by chibios_hwdef.py for the
# mRo Pixracer board. This is a fmuv4 board
include ../fmuv4/hwdef.dat

./libraries/AP_HAL_ChibiOS/hwdef/fmuv4/hwdef.dat
# 6 PWM available by default
define BOARD_PWM_COUNT_DEFAULT 0 // 6

AP_BoardConfig.cpp
// table of user settable parameters
const AP_Param::GroupInfo AP_BoardConfig::var_info[] = {
    // @Param: PWM_COUNT
    // @DisplayName: Auxiliary pin config
    // @Description: Controls number of FMU outputs which are setup for PWM. All unassigned pins can be used for GPIO
    // @Values: 0:No PWMs,1:One PWMs,2:Two PWMs,3:Three PWMs,4:Four PWMs,5:Five PWMs,6:Six PWMs,7:Seven PWMs,8:Eight PWMs
    // @RebootRequired: True
    // @User: Advanced
    AP_GROUPINFO("PWM_COUNT",    0, AP_BoardConfig, pwm_count, BOARD_PWM_COUNT_DEFAULT),


./waf configure --board=px4-v4
./waf configure --board=fmuv4


